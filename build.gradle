buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'forge'

version = "2.5.1"

// check we are on Jenkins
if (System.getenv().containsKey("BUILD_NUMBER")) {
    // if so, set add the build number to the build
    version = version + "." + System.getenv("BUILD_NUMBER")
    // set the update channel to dev
    project.ext.updateChannel = 'dev'
} else {
    // otherwise add .local
    version = version + ".local"
    // set the update channel to none
    project.ext.updateChannel = 'none'
}

group= "" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "MC-1.8-HudPixelReloaded"

minecraft {
    version = "1.8-11.14.1.1334"
    runDir = "eclipse"
}

dependencies {
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"
      
    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
    
    // fill HudPixelProperties
    from(sourceSets.main.resources.srcDirs) {
        include 'hudpixel.properties'
        
        // replace the version and the update channel
        expand 'version':project.version, 'channel':project.ext.updateChannel
    }
    
    // copy everything else, thats not the mcmod.info and not the hudpixel.properties
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
        exclude 'hudpixel.properties'
    }
}
